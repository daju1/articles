> 
;
> clear;
                             clear
;
# Классический скалярный потенциал заряда распределённого по сферической поверхности радиуса R;  в точке наблюдения расположенной по оси зет на расстоянии 
> R__0;#  от центра сферы
                              R__0
# Поверхностная плотность заряда распределённого равномерно по поверхности сферы радиуса 
> sigma := proc (q, r) options operator, arrow; (1/4)*q/(Pi*r^2) end proc;
             q   
(q, r) -> -------
                2
          4 Pi r 
;
# 
# diff(S, theta) := 2*Pi*r^2*sin(theta);
# 
> varphi__R := proc (q, R, R__0) options operator, arrow; Int(2*Pi*r^2*sin(theta)*sigma(q, r)/sqrt(R__0^2-2*R__0*r*cos(theta)+r^2), theta = 0 .. Pi) end proc;
                   /Pi           2                             
                  |        2 Pi r  sin(theta) sigma(q, r)      
 (q, R, R__0) ->  |    -------------------------------------- d
                  |        /    2                          2\  
                 /0    sqrt\R__0  - 2 R__0 r cos(theta) + r /  

   theta
;
> 
;
> varphi__R(q, R, R__0);
       /Pi                                                 
      |                  sin(theta) q                      
      |    ----------------------------------------- dtheta
      |                                        (1/2)       
     /0      /    2                          2\            
           2 \R__0  - 2 R__0 r cos(theta) + r /            
;
> 
;
> 
;
# Классический скалярный потенциал сферического конденсатора
> 
;
> 
;
> varphi__R(q, 1, R__0)-varphi__R(q, 2, R__0);
     /  /                                                         
 1   | |              q sin(theta)                                
---- | |  ------------------------------------ d[theta = 0 .. Pi, 
4 Pi | |                                 (1/2)                    
     |/   /    2                        \                         
     \    \R__0  - 2 R__0 cos(theta) + 1/                         

                     \        /  / 
                     |    1   | |  
  varphi = 0 .. 2 Pi]| - ---- | |  
                     |   4 Pi | |  
                     |        |/   
                     /        \    

              q sin(theta)                                
  ------------------------------------ d[theta = 0 .. Pi, 
                                 (1/2)                    
  /    2                        \                         
  \R__0  - 4 R__0 cos(theta) + 4/                         

                     \
                     |
  varphi = 0 .. 2 Pi]|
                     |
                     |
                     /
;
> 
;
> 
;
> 
;
> evalf(varphi__R(1, 1, R__0)-varphi__R(1, 2, R__0));
              /  /6.283185308   /3.141592654 
              | |              |             
0.07957747152 | |              |             
              | |              |             
              |/0.            /0.            
              \                              

                                                       \         
                sin(theta)                             |         
  -------------------------------------- dtheta dvarphi| - 0.079\
                                   (1/2)               |         
  /    2                          \                    |         
  \R__0  - 2. R__0 cos(theta) + 1./                    /         

           /  /6.283185308   /3.141592654 
           | |              |             
  57747152 | |              |             
           | |              |             
           |/0.            /0.            
           \                              

                                                       \
                sin(theta)                             |
  -------------------------------------- dtheta dvarphi|
                                   (1/2)               |
  /    2                          \                    |
  \R__0  - 4. R__0 cos(theta) + 4./                    /
;
> 
;
# Поле в сферическом конденсаторе не нулевое только между обкладками
# 
# Снаружи отрицательная обкладка радиуса 2 - внутри положительная радиуса 1
> 
;
> with(plots); plot(varphi__R(1, 1, R__0)+varphi__R(-1, 2, R__0), R__0 = -3 .. 3);

# 
# Расчёт потенциала Лиенара Вихерта
# 
# Скалярное произведение радиального вектора скорости заряда на вектор от заряда в точку наблюдения, делённое на скорость света
# 
> vr := proc (v, c, R, R__0, theta) options operator, arrow; v*(R__0*cos(theta)-R)/c end proc;
                          v (R__0 cos(theta) - R)
(v, c, R, R__0, theta) -> -----------------------
                                     c           
;
> 
;
> plot(vr(1, 3, 1, 2, theta), theta = 0 .. Pi);

> 
;
> 
;
> 
;
# Скалярный потенциал Лиенара Вихерта в точке наблюдения R__0; зарядов, равномерно распределённых на сферической поверхности радиуса R; движущихся с радиальной скоростью 
> v;#  . Формула без учёта запаздывания.
# 
> varphi__lw := proc (q, v, c, r, R__0) options operator, arrow; Int(2*Pi*r^2*sin(theta)*sigma(q, r)/(sqrt(R__0^2-2*R__0*r*cos(theta)+r^2)-v*(R__0*cos(theta)-r)/c), theta = 0 .. Pi) end proc;
# 
# 
> varphi__lw := proc (q, v, c, R, R__0) options operator, arrow; (1/4)*(Int(q*sin(theta)/(sqrt(R__0^2-2*R__0*R*cos(theta)+R^2)-v*(R__0*cos(theta)-R)/c), [theta = 0 .. Pi, varphi = 0 .. 2*Pi]))/Pi end proc;
                           /  / 
                       1   | |  
(q, v, c, R, R__0) -> ---- | |  
                      4 Pi | |  
                           |/   
                           \    

                            q sin(theta)                            
  ---------------------------------------------------------------- d
      /    2                          2\   v (R__0 cos(theta) - R)  
  sqrt\R__0  - 2 R__0 R cos(theta) + R / - -----------------------  
                                                      c             

                                       \
                                       |
  [theta = 0 .. Pi, varphi = 0 .. 2 Pi]|
                                       |
                                       |
                                       /
;
> 
;
# Рассмотрим сферический конденсатор. Пусть его внутренняя обкладка заряженная положительно имеет радиус 
> `R__+` := 1;#  
# а внешняя отрицательная обкладка имеет радиус 
> `R__-` := 2;
> c := 3;
# 
# Скалярный потенциал Лиенара Вихерта без учёта запаздывания сферического конденсатора, в котором внешняя отрицательная обкладка разлетается наружу
> 
;
# 
> with(plots); plot([varphi__R(1, `R__+`, R__0)+varphi__lw(-1, 1, c, `R__-`, R__0), varphi__R(1, `R__+`, R__0)+varphi__R(-1, `R__-`, R__0)], R__0 = -10 .. 10);

# 
# Скалярный потенциал Лиенара Вихерта без учёта запаздывания сферического конденсатора, в котором внешняя отрицательная обкладка схлопывается внутрь. Внутри внутренней положительной сферы появляется потенциальная яма для положительных зарядов. 
# 
> with(plots); plot([varphi__R(1, `R__+`, R__0)+varphi__lw(-1, -1, c, `R__-`, R__0), varphi__R(1, `R__+`, R__0)+varphi__R(-1, `R__-`, R__0)], R__0 = -10 .. 10);

# 
# Скалярный потенциал Лиенара Вихерта без учёта запаздывания сферического конденсатора, в котором обе обкладки - как внешняя отрицательная  так и внутрення положительная разлетаются наружу. Начальная фаза центрально-симметричного взрыва. 
# 
> with(plots); plot([varphi__lw(1, .5, c, `R__+`, R__0)+varphi__lw(-1, 1, c, `R__-`, R__0), varphi__R(1, `R__+`, R__0)+varphi__R(-1, `R__-`, R__0)], R__0 = -10 .. 10);

# Скалярный потенциал Лиенара Вихерта без учёта запаздывания сферического конденсатора, в котором положительная обкладка разлетается наружу, а отрицательная обкладка схлопывается внутрь. Обе обкладки движутся навстречу друг другу. Потенциальная яма внутри положительной обкладки максимально глубокая. Интересно, хватит ли этой потенциальной ямы для слияния ядер?
# 
> with(plots); plot([varphi__lw(1, 1, c, `R__+`, R__0)+varphi__lw(-1, -2, c, `R__-`, R__0), varphi__R(1, `R__+`, R__0)+varphi__R(-1, `R__-`, R__0)], R__0 = -10 .. 10);

# 
# Сумма скалярного потенциала Лиенара Вихерта без учета запаздывания зарядов, равномерно распределённых на сфере и движущихся в радиальном направлении со скалярным потенциалом равного количества неподвижных зарядов противоположного знака, распределённых по той же сфере того же радиуса
# 
> dvarphi__lw := proc (q, v, c, R, R__0) options operator, arrow; varphi__lw(q, v, c, R, R__0)+varphi__lw(-q, 0, c, R, R__0) end proc;
       (q, v, c, R, R__0) -> varphi__lw(q, v, c, R, R__0)

          + varphi__lw(-q, 0, c, R, R__0)
;
# для случая движущихся наружу отрицательных зарядов
> 
;
> with(plots); plot([dvarphi__lw(-1, 1, c, `R__+`, R__0)], R__0 = -10 .. 10);

# 
# для случая движущихся вовнутрь отрицательных зарядов
# 
> with(plots); plot([dvarphi__lw(-1, -1, c, `R__+`, R__0)], R__0 = -10 .. 10);

> 
;
