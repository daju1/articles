cdef extern from "tzap.c":
    long double get_c()
    long double get_dr()
    void set_dr(long double dr)
    void set_r_finish(long double r_finish)
    int calc_tzap(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double theta, long double r_min, long double * t2)

cdef extern from "testtzap.c":
    int integral_phi(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double r_min, long double * result)
    int integral_phi_and_E(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double * pE_minus_grad_phi_R0, long double *pE_minus_1_c_dA_dt_R0, long double r_min, long double *phi)
    int do_v1_calc(long double q, long double m_pos, long double m_neg, long double r0_pos, long double r0_neg, long double v0_pos, long double v0_neg, long double a0_pos, long double a0_neg, long double t_a0)

def get_light_veloncity():
    cdef long double c = get_c()
    return c

def get_dr_py():
    cdef long double dr = get_dr()
    return dr

def set_dr_py(dr):
    set_dr(dr)

def set_r_finish_py(r_finish):
    set_r_finish(r_finish)

def tzap(q, t, R0, r0, v0, a0, theta, r_min):
    cdef long double t2;
    cdef error = calc_tzap(q, t, R0, r0, v0, a0, theta, r_min, &t2)
    return t2

def phi_lw(q, t, R0, r0, v0, a0, r_min):
    cdef long double result;
    cdef error = integral_phi(q, t, R0, r0, v0, a0, r_min, &result)
    return result

def phi_and_E_lw(q, t, R0, r0, v0, a0, r_min):
    cdef long double E1
    cdef long double E2
    cdef long double phi
    cdef error = integral_phi_and_E(q, t, R0, r0, v0, a0, &E1, &E2, r_min, &phi)
    return (phi, E1, E2, error)

def v1_calc(q, m_pos, m_neg, r0_pos, r0_neg, v0_pos, v0_neg, a0_pos, a0_neg, t_a0):
    cdef error = do_v1_calc(q, m_pos, m_neg, r0_pos, r0_neg, v0_pos, v0_neg, a0_pos, a0_neg, t_a0)


