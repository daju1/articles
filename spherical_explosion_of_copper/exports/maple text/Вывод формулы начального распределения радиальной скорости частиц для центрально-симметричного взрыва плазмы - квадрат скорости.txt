> 
;
# ¬ывод формулы начального распределени€ радиальной скорости частиц дл€ центрально-симметричного взрыва плазмы
# 
# 
# ¬ыделим условно четыре периода развити€ взрыва: период испарени€ и ионизации вещества Ц образование плазмы, период разогрева плазмы, период разлЄта частиц из центра взрыва, сопровождающийс€ ростом дебаевского радиуса системы, и период схлопывани€, сопровождающийс€ уменьшением дебаевского радиуса системы.
# 
# ѕримем, что по окончании периода разогрева плазмы статистика распределени€ скорости частиц времени подчин€етс€ распределению ћаксвелла 

# 	  	(2.13)
> clear;
> 
;
> 
;
> dNdv__0 := proc (m, v2, T) options operator, arrow; Pi*N__i*2^(1/2)*(m/(Pi*k*T))^(3/2)*v2*exp(-(1/2)*m*v2/(k*T)) end proc;
                                     (3/2)                
                       (1/2) /  m   \            /  v2 m \
(m, v2, T) -> Pi N__i 2      |------|      v2 exp|- -----|
                             \Pi k T/            \  2 k T/
;
# ѕусть в конце фазы разогрева первоначальна€ плазма имеет радиус R__i; а изначальна€ плотность частиц равна  
> n__i := N__i/(int(4*Pi*r^2, r = 0 .. R__i));
                             3 N__i  
                           ----------
                                    3
                           4 Pi R__i 
# ƒл€ распределени€ радиальной компоненты скорости частиц примем следующее соотношение: число частиц заключЄнных в объЄме первоначальной плазмы радиуса R равное 
> n__i*(int(4*Pi*r^2, r = 0 .. R));
                                  3
                            N__i R 
                            -------
                                 3 
                             R__i  
# 
# соответствует числу частиц радиальна€ скорость разлЄта которых меньше или равна 
> N := proc (v__R) options operator, arrow; int(dNdv__0(m, v, T), v = 0 .. v__R) end proc;
v__R -> int(dNdv__0(m, v, T), v = 0 .. v__R)
# 
> solve(4*n__i*Pi*r^2 = dNdv__0(m, v2, T));
{N__i = 0, R__i = R__i, T = T, k = k, m = m, r = r, v2 = v2}, 

  {N__i = N__i, R__i = R__i, T = T, k = k, m = 0, r = 0, v2 = v2}, 

   /                                        
   |                                        
  < N__i = N__i, R__i = R__i, T = T, k = k, 
   |                                        
   \                                        

                    /     3          2     6            4\  
        2 k T RootOf\16 _Z  (exp(_Z))  R__i  + 9 v2 Pi r /  
  m = - --------------------------------------------------, 
                                v2                          

                \ 
                | 
  r = r, v2 = v2 >
                | 
                / 
;
> 
;
> 
;
> solve(4*n__i*Pi*r^2 = dNdv__0(m, v2, T), v2);
                        /       2     (1/2)   \    
                        |    3 r  Pi 2        |    
              2 LambertW|- -------------------| k T
                        |          (1/2)      |    
                        |    /m Pi\          3|    
                        |  4 |----|      R__i |    
                        \    \k T /           /    
            - -------------------------------------
                                m                  
;
> 
;
> 
;
