# Расчёт скалярного и векторного потенциалов Лиенара-Вихерта для центрально-симметричного взрыва 
# Выделим условно четыре периода развития взрыва: период испарения и ионизации вещества – образование плазмы, период разогрева плазмы, период разлёта частиц из центра взрыва, сопровождающийся ростом дебаевского радиуса системы, и период схлопывания, сопровождающийся уменьшением дебаевского радиуса системы. 
# Примем, что по окончании периода разогрева плазмы статистика распределения скорости частиц времени подчиняется распределению Максвелла 

# dN/dv0=N*(m/(2*Pi*k*T))^(3/2)*v^2*exp(-m*v^2/(2*k*T))
# \[\frac{dN}{d{{v}_{0}}}=N{{\left[ \frac{m}{2\pi kT} \right]}^{{}^{3}/{}_{2}}}{{v}^{2}}\exp \left( -\frac{m{{v}^{2}}}{2kT} \right)\]

# Константа Больцмана
k = 1.3806504*10^(-23)

# масса электрона = 9.10938356 × 10-31 килограмма
m__e = 9.10938356*10^(-31)

# заряд электрона = 1.60217662 × 10-19 Кулона
q__e = 1.60217662*10^(-19)

c = 299792458

mu__0 = 4*pi*10^(-7)

varepsilon__0 = 1/(mu__0*c^2)

N__A = 6.02214*10^23

# Масса атома меди = 64 г/моль /6.02214 * 10 23
m__Cu = 64*10^(-3)/N__A
# кг

# В опыте Менде «тонкая медная проволока диаметром 0.2 мм, её длина, выступающая из штока, 10 мм» 
# и «за время разряда напряжение на конденсаторах падает с 300 В до 50 В. При этом время разряда
# составляет ~ 500 мкс. Разница между энергией конденсаторов, заряженных до 300 В и заряженных до 50 В 
# составляет 162 Дж,

E1__c = (6000*10^(-6)*300^2*(1/2)-6000*10^(-6)*50^2*(1/2))
#262.5000000 - однако

# поэтому средняя мощность микровзрыва за время разряда конденсаторов составляет ~ 270 кВт. 
# Если учесть, что для нагрева, плавления и испарения проволоки разрядника необходимо затратить энергию ~ 10 Дж, 
# то оставшаяся энергия ~ 150 Дж идёт на разогрев образовавшейся плазмы.» 

# Решить поставленную задачу для конкретной конфигурации экрана клетки Фарадея и 
# внешнего экрана задача не простая. Поэтому рассмотрим решение задачи для случая 
# сферической конфигурации этих элементов, когда разогретая плазма находится в центе 
# сфер. Будем также считать, что размеры сгустка плазмы значительно меньше размеров 
# экранов, т.е. будем рассматривать случай точечного заряда. Будем считать, что радиус 
# клетки Фарадея равен 1 r , а радиус внешнего экрана равен 2 r . 
# Интегрируя соотношение (3.34) по координате, получаем амплитуду импульс

# В рассматриваемой установке максимальный радиус нижней части экрана клетки Фарадея 
# составляет 0.11 м, а радиус внешнего экрана равен 0.15 м. Эти размеры примем для 
# сферических поверхностей, рассматриваемых в задаче, для ориентировочного расчёта 
# величины эквивалентного заряда. Амплитуда отрицательной части импульса, 
# показанного на Рис. 7 составляет 30 мВ. Для этого случая максимальная величина 
# эквивалентного заряда взрыва, образовавшегося в процессе разогрева плазмы, будет равен 
# 3.4x10-14 Кл.

dq__experiment = (4*pi*varepsilon__0*(-30*10^(-3)))/(1/.11^2-1/.15^2)

# Если посчитать энергию, необходимую для разогрева, плавления и испарения медной 
# проволоки диаметром 0.2 мм и длиной 5 мм то она составит около 8 Дж. При этом 
# температура паров меди уже будет составлять около 2800 К. Энергия же конденсатора 
# ёмкостью 3000 мкФ, заряженного до напряжения 300 В составляет 134 Дж. 

E__c = 3000*10^(-6)*300^2*(1/2)

# Следовательно, энергия порядка 125 Дж уйдёт на разогрев паров меди и окружающего 
# воздуха, на их ионизацию и то световое и другие виды излучения, которое сопутствует 
# нагреву газа и плазмы.

V__Cu_sgs = pi*0.1e-1^2*.5
# см^3

M__Cu_sgs = 8.92*V__Cu_sgs
print "M__Cu_sgs = ", M__Cu_sgs.n()
print "should be 0.001401150324"
# г

M__molar_sgs = 63.546
# г/моль

nu__Cu = M__Cu_sgs/M__molar_sgs
# моль

N__i = nu__Cu*N__A

N__A*k

# Линейное расширение меди
a(t) = 1+1.607*t/10^5+.403*t^2/10^8

p = plot(a(t), (t, 0 , 625))
# p.show()
print "a(2567) = ",  a(2567)
print "should be 1.067807331"

# Для нагревания до температуры плавления нужно затратить
# Для вычисления затрат энергии для нагревания до температуры плавления были взяты табличные данные теплоёмкости меди при постоянном давлении в из  
# Источники: [CITATION Зин89 \l 1033 ]  [CITATION Чир68 \l 1049 ]

#tab1_T  = [300,   400,   500,   600,   700,   800,   900,   1000,  1100,  1200,  1300,  1357.6]
#tab1_Cp = [385.0, 397.7, 408.0, 416.9, 425.1, 432.9, 441.7, 451.4, 464.3, 480.8, 506.6, 525.2]
tab1_Cp_T = [ (300, 385.0), (400, 397.7), (500, 408.0), (600, 416.9), (700, 425.1), (800,432.9), \
            (900, 441.7), (1000, 451.4), (1100, 464.3), (1200, 480.8), (1300, 506.6), (1357.6, 525.2) ]
# Дж/(кг*К)

# 0.1e-2*tab1_Cp*M__molar_sgs
list_plot(tab1_Cp_T)

# При интерполяции кубическими сплайнами и интегрировании в пределах от 300 до 1357.6 К было получено  Дж/кг , 
# при умножении на массу меди получено 0.653 Дж. Затраты энергии на плавление 0.287 Дж

c__p = spline(tab1_Cp_T)
print "c__p = ", c__p

p = plot(c__p, (300, 1357.6))
p.save("results/copper_c__p.png")

Q__nagrev_do_T_pl = c__p.definite_integral(300, 1357.6)
print "Q__nagrev_do_T_pl = ", Q__nagrev_do_T_pl
print "should be 466024.2040"
# Дж/кг

c__p(1357)
print "c__p(1357)= ", c__p(1357)
print "should be 525.001217859185"

c__p_exptrapotation = c__p(1357)*M__molar_sgs*10^(-3)
print "c__p_exptrapotation= ", c__p_exptrapotation
print "should be 33.3617273900798"

print (0.1e-2*Q__nagrev_do_T_pl*M__Cu_sgs).n()
print "should be .6529699644"

# 1357.6 K  8.00* г/см3 - данные нуждаются в уточнении 
# 1400  К    7,98  г/см3 
# 1600  K    7.96  г/см3 
# Производим линейную интерполяцию к температуре кипения 2840 К 
# https://www.sciencedirect.com/science/article/abs/pii/S0009261408015790 
# The predictions of the critical point parameters for Al, Cu and W found from 
# the correspondence between the critical point and unit compressibility line 
# (Zeno line) positions

# когда через медную проволоку проходит разряд большой мощности, то она не просто испаряется при температуре кипения меди, а за счёт инерционности и малого времени разряда давление внутри меди возрастает до очень больших значений. Поэтому дальнейшие расчёты будем производить в предположении, что жидкая достигает критической точки 
# Расчётные данные о термодинамических свойствах меди в критической точке берём из https://www.sciencedirect.com/science/article/abs/pii/S0009261408015790 
# Chemical Physics Letters 467 (2009) 318–322. The predictions of the critical point parameters for Al, Cu and W found from the correspondence between the critical point and unit compressibility line (Zeno line) positions. E.M. Apfelbaum *, V.S. Vorob’ev. Joint Institute for High Temperatures of Russian Academy of Science, Izhorskaya 13, Stroenie 2, 125412 Moscow, Russia 
# В этой работе приводится сводная таблица расчётных значений критических параметров меди, полученных разными способами 
# 7093 1.95 This work 
# 7620 1.4 Scaling [27] A.A. Likalter, Phys. Rev. B 53 (1996) 4386. 
# 8390 2.4 Extrapolation [28] V.E. Fortov, A.N. Dremin, A.A. Leont’ev, Teplofizila vysokih temperatur 13 
# (1975) 984 (in Russian).

T__i = 7093
rho__crit = 1.95

V__Cu_sgs__crit = M__Cu_sgs/rho__crit
print "V__Cu_sgs__crit = ", V__Cu_sgs__crit.n()
print "should be 0.7185386277e-3"
# см^3

# Рассчитываем первоначальный радиус как радиус шара меди в критическом состоянии объёма
R__i = 0.1e-1*((3*V__Cu_sgs__crit/(4*pi))^(1/3)).n()
print "R__i = ", R__i
print "should be 0.5556318983e-3"
# м 

# Энергия ионизации 
# (первый электрон)	745,0 (7,72) кДж/моль (эВ) 

 

# Термодинамические свойства простого вещества 
# Плотность (при н. у.)	8,92 г/см³ 
# Температура плавления	1356,55 K (1 083,4 °С)                    1083 
# Температура кипения	2 567 °С                                                              2877 
# Уд. теплота плавления	13,01 кДж/моль                              3.11 ккал/моль * 4.184 Дж/кал = 13,01224 
# Уд. теплота испарения	304,6 кДж/моль                              72,8 ккал/моль* 4.184 Дж/кал = 304,5952 
# Молярная теплоёмкость	24,44[2] Дж/(K·моль)                     тв - 5,848 газ - 4,968 кал/моль град * 4.184 Дж/кал = 24,468032 
# Молярный объём	7,1 см³/моль 


Q__pl = 13.01224*10^3*nu__Cu
print "Q__pl = ", Q__pl.n()
print "should be .2869119109"

Q__isp = 304.6*10^3*nu__Cu
print "Q__isp = ", Q__isp.n()
print "should be 6.716243174"

Q__nagrev = (7093-300)*c__p_exptrapotation*nu__Cu
print "Q__nagrev = ", Q__nagrev.n()
print "should be 4.99696902105744"

# На рисунке 15 статьи Менде кроме отрицательного и положительного импульсов виден некий колебательный процесс период которого составляет порядка 800 мкс. Кроме того на рисунке 11 кроме напряжения и тока разряда также виден колебательный процесс с аналогичным периодом. Что особенно интересно: в момент отрицательного импульса на рисунке 15 расстояние между горбами (период) колебательного процесса увеличивается и составляет уже величину порядка 1200 мкс. 

# Есть предположение, что период 800 мкс связан с резонансами экспериментальной установки как колебательного контура, а вот период 1200 мкс может быть связан с плазменной частотой, исходя из которой можно попытаться оценить степень ионизации плазмы в опыте Менде. Частота плазменных колебаний (для сферической конфигурации) 

# Откуда концентрация зарядов
n__e = 3*m__e/(4*pi*q__e^2*(1.2*10^(-3))^2)

# Предлположение не оправдалось плазменная частота намного выше


Q__ionization = 745*10^3*nu__Cu
print "Q__ionization = ", Q__ionization.n()
print "should be 16.42679305"

# Затраты на нагрев жидкой меди до состояния критического пара оценить достаточно сложно поэтому 
# я попытаюсь приблизительно оценить их как затраты на нагрев при постоянном давлении (4.998208105 Дж) 
# и плюс затраты на испарение при постоянном давлении (6.716243174 Дж) + энергию на сжатие пара до 
# расчётного критического давления (450 атмосфер) 

V__Cu_1atm = nu__Cu*N__A*k*T__i/10^5
print "V__Cu_1atm = ", V__Cu_1atm.n()
print "should be 0.1300352340e-4"
# м^3

V__Cu_450atm = nu__Cu*N__A*k*T__i/(450*10^5)
print "V__Cu_450atm = ", V__Cu_450atm.n()
print "should be 2.889671867*10^(-8)"

V__Cu__crit = M__Cu_sgs*10^(-6)/rho__crit
print "V__Cu__crit = ", V__Cu__crit.n()
print "should be 7.185386277*10^(-10)"

V = var("V")
A = integrate(nu__Cu*N__A*k*T__i/V, (V, V__Cu__crit, V__Cu_1atm))
print "A = ", A.n()
print "should be 12.74801905"

integrate(nu__Cu*N__A*k*T__i/V, (V, V__Cu_450atm , V__Cu_1atm))
7.944174390

# Таким образом остаток энергии, который идёт на разогрев уже ионизированной плазмы равен
Delta_E = E__c-Q__pl-Q__isp-Q__nagrev-Q__ionization-A
print "Delta_E = ", Delta_E.n()
print "should be 93.8250637789426"
#Дж 

# Промежуток времени в течение которого происходит нагрев ионизированной плазмы равен
Delta_t = 500*Delta_E*10^(-6)/E__c
print "Delta_t = ", Delta_t.n()
print "should be 0.347500236218306e-3"

# Максимальная разность температур, которая может быть сообщена ионизированной плазме равна
Delta_T = Delta_E/(c__p_exptrapotation*nu__Cu)
print "Delta_T = ", Delta_T.n()
print "should be 1.27548050741264*10^5"

# Максимальная температура, до которой может быть нагрета ионизированная плазма равна
T__e = Delta_T + T__i
print "T__e = ", T__e.n()
print "should be 1.34641050741264*10^5"

# В температурных единицах 1 эВ соответствует 1,160 452 21(67)⋅10^4 кельвин (см. постоянная Больцмана).
print (T__e/(1.16045221*10^4)).n()
print "should be 11.6024640725366"

# Наилучшее совпадение с даными эксперимента даст расчёт при начальной плотности 1 кг/м3 и начальной температуре 5 эВ
dNdv__0(m, v, T) = pi*N__i*2^(1/2)*(m/(pi*k*T))^(3/2)*v^2*exp(-(1/2)*m*v^2/(k*T))

# интегрируем
v = var("v")
# (integrate(dNdv__0(m__e, v, T__e), (v, 0, infinity) ))/N__i
1.000000000

# (integrate(dNdv__0(m__Cu, v, T__e), (v, 0, infinity) ))/N__i
1.000000000


print (V__Cu_sgs__crit*10^(-6)).n()
print "should be 7.185386277*10^(-10)"

r = var("r")
print (integrate(4*pi*r*r, (r, 0, R__i))).n()
print "should be 7.185386273*10^(-10)"

# Пусть в конце фазы разогрева первоначальная плазма имеет радиус R__i а изначальная плотность частиц равна
n__i = N__i/(integrate(4*pi*r^2, (r, 0, R__i)))
print "n__i = ", n__i
1.847979889*10^28

# Для распределения радиальной компоненты скорости частиц примем следующее соотношение:
# Тепловая скорость частиц

v__T(m, T) = sqrt(2*k*T/m)
print v__T(m__e, T__i)
print "should be 4.636895888*10^5"

print (v__T(m__e, T__e)).n()
print "should be 2.02023137241212*10^6"

print v__T(m__Cu, T__i)
print "should be 1357.554508"

print (v__T(m__Cu, T__e)).n()
print "should be 5914.67712890453"

# Для распределения радиальной компоненты начальной скорости частиц примем линейную аппроксимацию в виде:
alpha = 0.25e-3
v__0r(r__0, R_init, m, T) = alpha*r__0*v__T(m, T)/R_init
print v__0r(r__0, R__i, m, T)

# Здесь r__0 радиус слоя заряженных частиц в начальный момент времени

# Для распределения радиальной компоненты теплового ускорения в начальный момент времени взрыва примем аппросксимацию в виде
a__0r(r__0, R_init, m, T) = Delta_T.n()*alpha*r__0*(diff(v__T(m, T), T))/(Delta_t.n()*R_init)
print a__0r(r__0, R_init, m, T)

r0 = var("r0")
print a__0r(r0, R__i, m, T)
print "should be 0.433908765869441e-3*r0/(sqrt(T/m)*m)"

# Уравнения радиального движения слоя заряженных частиц
# r(t, r__0, R_init, m, T) = r__0 + v__0r(r__0, R_init, m, T)*t+(1/2)*a__0r(r__0, R_init, m, T)*t^2
# print r(t, r__0, R__i, m, T)

























