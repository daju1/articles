cdef extern from "tzap.c":
    long double get_c()
    long double get_multiplier_E()
    long double get_dr()
    void set_dr(long double dr)
    void set_r_finish(long double r_finish)
    int calc_tzap(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double theta, long double r_min, long double * t2, long double * r1)
    int get_r_common(long double q, long double t, long double r0, long double v0, long double a0, long double r_min, long double * r)
    long double get_v_common(long double q, long double t, long double v0, long double a0)
    int get_capacity_common(long double q, long double t, long double r0_p, long double v0_p, long double a0_p, long double r0_n, long double v0_n, long double a0_n, long double r_min, long double * r_pos, long double * r_neg, long double * capacity, long double * energy)


cdef extern from "integrate.c":
    int integrand_phi_and_E(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double theta, long double * pE_minus_grad_phi_R0, long double *pE_minus_1_c_dA_dt_R0, long double *pE, long double r_min, long double *phi, long double *A)
    int integral_phi(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double r_min, long double * result)
    int integral_phi_and_E(long double q, long double t, long double R0, long double r0, long double v0, long double a0, long double * pE_minus_grad_phi_R0, long double *pE_minus_1_c_dA_dt_R0, long double *pE, long double r_min, long double *phi, long double *A)
    int dbl_integral_phi_and_E(long double q, long double t, long double R0, long double r0_min, long double v0_min, long double a0_min, long double r0_max, long double v0_max, long double a0_max, long double * pE_minus_grad_phi_R0, long double * pE, long double *pE_minus_1_c_dA_dt_R0, long double r_min, long double *phi, long double *A)

cdef extern from "calc.c":
    int do_v1_calc(long double q, long double m_pos, long double m_neg, long double r0_pos, long double r0_neg, long double v0_pos, long double v0_neg, long double a0_pos, long double a0_neg, long double t_a0)

def get_light_veloncity():
    cdef long double c = get_c()
    return c

def get_electric_field_multiplier():
    cdef long double m = get_multiplier_E()
    return m

def get_dr_py():
    cdef long double dr = get_dr()
    return dr

def set_dr_py(dr):
    set_dr(dr)

def set_r_finish_py(r_finish):
    set_r_finish(r_finish)

def tzap(q, t, R0, r0, v0, a0, theta, r_min):
    cdef long double t2;
    cdef long double r1;
    cdef error = calc_tzap(q, t, R0, r0, v0, a0, theta, r_min, &t2, &r1)
    return (t2, r1)

def phi_and_E_integrand(q, t, R0, r0, v0, a0, theta, r_min):
    cdef long double E1
    cdef long double E2
    cdef long double E
    cdef long double phi
    cdef long double A
    cdef error = integrand_phi_and_E(q, t, R0, r0, v0, a0, theta, &E1, &E2, &E, r_min, &phi, &A)
    if abs(E1+E2-E)>1e-0:
        print ("abs(E1+E2-E)", abs(E1+E2-E))
        raise Exception("abs(E1+E2-E)>1e-0" + str(abs(E1+E2-E)))
    return (phi, A, E1, E2, E, error)

def phi_and_E_lw(q, t, R0, r0, v0, a0, r_min):
    cdef long double E1
    cdef long double E2
    cdef long double E
    cdef long double phi
    cdef long double A
    cdef error = integral_phi_and_E(q, t, R0, r0, v0, a0, &E1, &E2, &E, r_min, &phi, &A)
    return (phi, A, E1, E2, E, error)

def phi_lw(q, t, R0, r0, v0, a0, r_min):
    cdef long double result;
    cdef error = integral_phi(q, t, R0, r0, v0, a0, r_min, &result)
    return result

def phi_and_E_lw(q, t, R0, r0, v0, a0, r_min):
    cdef long double E1
    cdef long double E2
    cdef long double E
    cdef long double phi
    cdef long double A
    cdef error = integral_phi_and_E(q, t, R0, r0, v0, a0, &E1, &E2, &E, r_min, &phi, &A)
    return (phi, A, E1, E2, E, error)

def dbl_phi_and_E_lw(q, t, R0, r0_min, v0_min, a0_min, r0_max, v0_max, a0_max, r_min):
    cdef long double E1
    cdef long double E2
    cdef long double E
    cdef long double phi
    cdef long double A
    cdef error = dbl_integral_phi_and_E(q, t, R0, r0_min, v0_min, a0_min, r0_max, v0_max, a0_max, &E1, &E2, &E, r_min, &phi, &A)
    return (phi, A, E1, E2, E, error)

def v1_calc(q, m_pos, m_neg, r0_pos, r0_neg, v0_pos, v0_neg, a0_pos, a0_neg, t_a0):
    cdef error = do_v1_calc(q, m_pos, m_neg, r0_pos, r0_neg, v0_pos, v0_neg, a0_pos, a0_neg, t_a0)

def get_r_of_sphere(q, t, r0, v0, a0, r_min):
    cdef long double r
    cdef err = get_r_common(q, t, r0, v0, a0, r_min, &r)
    return r

def get_capacity_of_spherical_capacitor(q, t, r0_p, v0_p, a0_p, r0_n, v0_n, a0_n, r_min):
    cdef long double r_pos
    cdef long double r_neg
    cdef long double capacity
    cdef long double energy
    cdef err = get_capacity_common(q, t, r0_p, v0_p, a0_p, r0_n, v0_n, a0_n, r_min, &r_pos, &r_neg, &capacity, &energy)
    return (r_pos, r_neg, capacity, energy)

def get_v_of_sphere(q, t, v0, a0):
    cdef long double v = get_v_common(q, t, v0, a0)
    return v


