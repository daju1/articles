drozole@RT0DL1000000018:~$ sage
┌────────────────────────────────────────────────────────────────────┐
│ SageMath version 7.5.1, Release Date: 2017-01-15                   │
│ Type "notebook()" for the browser-based notebook interface.        │
│ Type "help()" for help.                                            │
└────────────────────────────────────────────────────────────────────┘

sage: integral(cos(x),x)
sin(x)

sage: integral(cos(x),x)
sin(x)
sage: integral(cos(x)^2,x)
1/2*x + 1/4*sin(2*x)
sage: integral(2*cos(x)^2*sin(x)^3,x)
2/5*cos(x)^5 - 2/3*cos(x)^3
sage: integral(2*cos(x)^2*sin(x)^3-sin(x)^5,x)
3/5*cos(x)^5 - 4/3*cos(x)^3 + cos(x)

sage: integral(2*cos(x)^2*sin(x)^3-sin(x)^5,x,0,pi/2)
-4/15
sage: integral(2*cos(x)^2*sin(x)^3-sin(x)^5,x,-pi/2,pi/2)
0
sage: integral(2*cos(x)^2*sin(x)^3-sin(x)^5,x,0,pi)
-8/15
sage: integral(2*cos(x)^2*sin(x)^3-sin(x)^5,x,0,pi/2)
-4/15


sage: plot(sin(x),x)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(2*cos(x)^2*sin(x)^3-sin(x)^5,x,0,pi/2)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(2*cos(x)^2*sin(x)^3-sin(x)^5,x,0,pi)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(cos(x)^4*sin(x),x,0,pi)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(cos(x)*sin(x)^4,x,0,pi)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: help(integral)

sage: R = var("R")
sage: R
R
sage: R0 = var("R0")
sage: R0
R0
sage: theta=var("theta")



sage: cos_alpha(R0,R,theta)=cos(arcsin(sin(theta)*R/sqrt(R*R+R0*R0-2*R*R0*cos(theta))))
sage: alpha(R0,R,theta)
sqrt(R0^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)

sage: cos_alpha(R0,R,theta)
sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)
sage: plot(cos_alpha(2,1,theta), theta, 0, pi)
Launched png viewer for Graphics object consisting of 1 graphics primitive

sage: cos_alpha(R0,R,theta)
sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)

sage: ER(R0,R,theta)=cos_alpha(R0,R,theta)/(R*R+R0*R0-2*R*R0*cos(theta))
sage: ER(R0,R,theta)
-sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)/(2*R*R0*cos(theta) - R^2 - R0^2)

sage: plot(ER(2,1,theta),theta)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(ER(2,1,theta),theta,0,pi)
Launched png viewer for Graphics object consisting of 1 graphics primitive

sage: ER(R0,R,theta)
-sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)/(2*R*R0*cos(theta) - R^2 - R0^2)
sage: derivative(ER(R0,R,theta),R)
((R0*cos(theta) - R)*R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2)^2 - R*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2))/((2*R*R0*cos(theta) - R^2 - R0^2)*sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)) + 2*sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)*(R0*cos(theta) - R)/(2*R*R0*cos(theta) - R^2 - R0^2)^2

sage: ERR(R0,R,theta)=derivative(ER(R0,R,theta),R)
sage: ERR(R0,R,theta)
((R0*cos(theta) - R)*R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2)^2 - R*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2))/((2*R*R0*cos(theta) - R^2 - R0^2)*sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)) + 2*sqrt(R^2*sin(theta)^2/(2*R*R0*cos(theta) - R^2 - R0^2) + 1)*(R0*cos(theta) - R)/(2*R*R0*cos(theta) - R^2 - R0^2)^2
sage: plot(ERR(2,1,theta),theta)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(ERR(2,1,theta),theta, 0, pi)
Launched png viewer for Graphics object consisting of 1 graphics primitive

sage: assume(R>0,R0>0,R0>R);
sage: integral(ERR(R0,R,theta)*2*pi*R*sin(theta)*R,theta,0,pi)
2/3*pi*(6*sqrt(-R^2 + R0^2)*R0^8*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^12 + 4*R^11*R0 + 3*R^10*R0^2 - 8*R^9*R0^3 - 14*R^8*R0^4 + 14*R^6*R0^6 + 8*R^5*R0^7 - 3*R^4*R0^8 - 4*R^3*R0^9 - R^2*R0^10) - 6*sqrt(-R^2 + R0^2)*R0^8*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^12 - 4*R^11*R0 + 3*R^10*R0^2 + 8*R^9*R0^3 - 14*R^8*R0^4 + 14*R^6*R0^6 - 8*R^5*R0^7 - 3*R^4*R0^8 + 4*R^3*R0^9 - R^2*R0^10) + sqrt(R^2 + 2*R*R0 + R0^2)*R^8/(R^10*R0^2 + 4*R^9*R0^3 + 3*R^8*R0^4 - 8*R^7*R0^5 - 14*R^6*R0^6 + 14*R^4*R0^8 + 8*R^3*R0^9 - 3*R^2*R0^10 - 4*R*R0^11 - R0^12) - sqrt(R^2 - 2*R*R0 + R0^2)*R^8/(R^10*R0^2 - 4*R^9*R0^3 + 3*R^8*R0^4 + 8*R^7*R0^5 - 14*R^6*R0^6 + 14*R^4*R0^8 - 8*R^3*R0^9 - 3*R^2*R0^10 + 4*R*R0^11 - R0^12) + 2*sqrt(R^2 + 2*R*R0 + R0^2)*R0^8/(R^12 + 4*R^11*R0 + 3*R^10*R0^2 - 8*R^9*R0^3 - 14*R^8*R0^4 + 14*R^6*R0^6 + 8*R^5*R0^7 - 3*R^4*R0^8 - 4*R^3*R0^9 - R^2*R0^10) - 2*sqrt(R^2 - 2*R*R0 + R0^2)*R0^8/(R^12 - 4*R^11*R0 + 3*R^10*R0^2 + 8*R^9*R0^3 - 14*R^8*R0^4 + 14*R^6*R0^6 - 8*R^5*R0^7 - 3*R^4*R0^8 + 4*R^3*R0^9 - R^2*R0^10) + 24*sqrt(-R^2 + R0^2)*R0^7*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^11 + 4*R^10*R0 + 3*R^9*R0^2 - 8*R^8*R0^3 - 14*R^7*R0^4 + 14*R^5*R0^6 + 8*R^4*R0^7 - 3*R^3*R0^8 - 4*R^2*R0^9 - R*R0^10) + 24*sqrt(-R^2 + R0^2)*R0^7*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^11 - 4*R^10*R0 + 3*R^9*R0^2 + 8*R^8*R0^3 - 14*R^7*R0^4 + 14*R^5*R0^6 - 8*R^4*R0^7 - 3*R^3*R0^8 + 4*R^2*R0^9 - R*R0^10) + 3*sqrt(R^2 + 2*R*R0 + R0^2)*R^7/(R^10*R0 + 4*R^9*R0^2 + 3*R^8*R0^3 - 8*R^7*R0^4 - 14*R^6*R0^5 + 14*R^4*R0^7 + 8*R^3*R0^8 - 3*R^2*R0^9 - 4*R*R0^10 - R0^11) + 3*sqrt(R^2 - 2*R*R0 + R0^2)*R^7/(R^10*R0 - 4*R^9*R0^2 + 3*R^8*R0^3 + 8*R^7*R0^4 - 14*R^6*R0^5 + 14*R^4*R0^7 - 8*R^3*R0^8 - 3*R^2*R0^9 + 4*R*R0^10 - R0^11) + 3*sqrt(R^2 + 2*R*R0 + R0^2)*R0^7/(R^11 + 4*R^10*R0 + 3*R^9*R0^2 - 8*R^8*R0^3 - 14*R^7*R0^4 + 14*R^5*R0^6 + 8*R^4*R0^7 - 3*R^3*R0^8 - 4*R^2*R0^9 - R*R0^10) + 3*sqrt(R^2 - 2*R*R0 + R0^2)*R0^7/(R^11 - 4*R^10*R0 + 3*R^9*R0^2 + 8*R^8*R0^3 - 14*R^7*R0^4 + 14*R^5*R0^6 - 8*R^4*R0^7 - 3*R^3*R0^8 + 4*R^2*R0^9 - R*R0^10) + 6*sqrt(-R^2 + R0^2)*R^6*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 24*sqrt(-R^2 + R0^2)*R^5*R0*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 24*sqrt(-R^2 + R0^2)*R^4*R0^2*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 24*sqrt(-R^2 + R0^2)*R^3*R0^3*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 60*sqrt(-R^2 + R0^2)*R^2*R0^4*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 24*sqrt(-R^2 + R0^2)*R*R0^5*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 24*sqrt(-R^2 + R0^2)*R0^6*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 6*sqrt(-R^2 + R0^2)*R^6*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) + 24*sqrt(-R^2 + R0^2)*R^5*R0*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 24*sqrt(-R^2 + R0^2)*R^4*R0^2*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 24*sqrt(-R^2 + R0^2)*R^3*R0^3*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) + 60*sqrt(-R^2 + R0^2)*R^2*R0^4*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 24*sqrt(-R^2 + R0^2)*R*R0^5*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 24*sqrt(-R^2 + R0^2)*R0^6*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 2*sqrt(R^2 + 2*R*R0 + R0^2)*R^6/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 2*sqrt(R^2 - 2*R*R0 + R0^2)*R^6/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 12*sqrt(R^2 + 2*R*R0 + R0^2)*R^5*R0/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 12*sqrt(R^2 - 2*R*R0 + R0^2)*R^5*R0/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 2*sqrt(R^2 + 2*R*R0 + R0^2)*R^4*R0^2/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 2*sqrt(R^2 - 2*R*R0 + R0^2)*R^4*R0^2/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) + 18*sqrt(R^2 + 2*R*R0 + R0^2)*R^3*R0^3/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 18*sqrt(R^2 - 2*R*R0 + R0^2)*R^3*R0^3/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) + 8*sqrt(R^2 + 2*R*R0 + R0^2)*R^2*R0^4/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 8*sqrt(R^2 - 2*R*R0 + R0^2)*R^2*R0^4/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 12*sqrt(R^2 + 2*R*R0 + R0^2)*R*R0^5/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) - 12*sqrt(R^2 - 2*R*R0 + R0^2)*R*R0^5/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) - 7*sqrt(R^2 + 2*R*R0 + R0^2)*R0^6/(R^10 + 4*R^9*R0 + 3*R^8*R0^2 - 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 + 8*R^3*R0^7 - 3*R^2*R0^8 - 4*R*R0^9 - R0^10) + 7*sqrt(R^2 - 2*R*R0 + R0^2)*R0^6/(R^10 - 4*R^9*R0 + 3*R^8*R0^2 + 8*R^7*R0^3 - 14*R^6*R0^4 + 14*R^4*R0^6 - 8*R^3*R0^7 - 3*R^2*R0^8 + 4*R*R0^9 - R0^10) + 6*sqrt(-R^2 + R0^2)*R0^4*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^8 + 2*R^7*R0 - R^6*R0^2 - 4*R^5*R0^3 - R^4*R0^4 + 2*R^3*R0^5 + R^2*R0^6) - 6*sqrt(-R^2 + R0^2)*R0^4*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^8 - 2*R^7*R0 - R^6*R0^2 + 4*R^5*R0^3 - R^4*R0^4 - 2*R^3*R0^5 + R^2*R0^6) + 12*sqrt(-R^2 + R0^2)*R0^3*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^7 + 2*R^6*R0 - R^5*R0^2 - 4*R^4*R0^3 - R^3*R0^4 + 2*R^2*R0^5 + R*R0^6) + 12*sqrt(-R^2 + R0^2)*R0^3*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^7 - 2*R^6*R0 - R^5*R0^2 + 4*R^4*R0^3 - R^3*R0^4 - 2*R^2*R0^5 + R*R0^6) - 6*sqrt(-R^2 + R0^2)*R^2*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^6 + 2*R^5*R0 - R^4*R0^2 - 4*R^3*R0^3 - R^2*R0^4 + 2*R*R0^5 + R0^6) - 12*sqrt(-R^2 + R0^2)*R*R0*arctan(sqrt(R^2 + 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^6 + 2*R^5*R0 - R^4*R0^2 - 4*R^3*R0^3 - R^2*R0^4 + 2*R*R0^5 + R0^6) + 6*sqrt(-R^2 + R0^2)*R^2*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^6 - 2*R^5*R0 - R^4*R0^2 + 4*R^3*R0^3 - R^2*R0^4 - 2*R*R0^5 + R0^6) - 12*sqrt(-R^2 + R0^2)*R*R0*arctan(sqrt(R^2 - 2*R*R0 + R0^2)/sqrt(-R^2 + R0^2))/(R^6 - 2*R^5*R0 - R^4*R0^2 + 4*R^3*R0^3 - R^2*R0^4 - 2*R*R0^5 + R0^6) + 2*sqrt(R^2 + 2*R*R0 + R0^2)*R^2/(R^4*R0^2 + 4*R^3*R0^3 + 6*R^2*R0^4 + 4*R*R0^5 + R0^6) - 3*sqrt(R^2 + 2*R*R0 + R0^2)*R^2/(R^4*R0^2 + 2*R^3*R0^3 - 2*R*R0^5 - R0^6) + 3*sqrt(R^2 - 2*R*R0 + R0^2)*R^2/(R^4*R0^2 - 2*R^3*R0^3 + 2*R*R0^5 - R0^6) - 2*sqrt(R^2 - 2*R*R0 + R0^2)*R^2/(R^4*R0^2 - 4*R^3*R0^3 + 6*R^2*R0^4 - 4*R*R0^5 + R0^6) + 2*sqrt(R^2 + 2*R*R0 + R0^2)*R0^2/(R^6 + 4*R^5*R0 + 6*R^4*R0^2 + 4*R^3*R0^3 + R^2*R0^4) - 2*sqrt(R^2 - 2*R*R0 + R0^2)*R0^2/(R^6 - 4*R^5*R0 + 6*R^4*R0^2 - 4*R^3*R0^3 + R^2*R0^4) + 6*sqrt(R^2 + 2*R*R0 + R0^2)*R/(R^4*R0 + 4*R^3*R0^2 + 6*R^2*R0^3 + 4*R*R0^4 + R0^5) - 3*sqrt(R^2 + 2*R*R0 + R0^2)*R/(R^4*R0 + 2*R^3*R0^2 - 2*R*R0^4 - R0^5) - 3*sqrt(R^2 - 2*R*R0 + R0^2)*R/(R^4*R0 - 2*R^3*R0^2 + 2*R*R0^4 - R0^5) + 6*sqrt(R^2 - 2*R*R0 + R0^2)*R/(R^4*R0 - 4*R^3*R0^2 + 6*R^2*R0^3 - 4*R*R0^4 + R0^5) + 6*sqrt(R^2 + 2*R*R0 + R0^2)*R0/(R^5 + 4*R^4*R0 + 6*R^3*R0^2 + 4*R^2*R0^3 + R*R0^4) + 3*sqrt(R^2 + 2*R*R0 + R0^2)*R0/(R^5 + 2*R^4*R0 - 2*R^2*R0^3 - R*R0^4) + 3*sqrt(R^2 - 2*R*R0 + R0^2)*R0/(R^5 - 2*R^4*R0 + 2*R^2*R0^3 - R*R0^4) + 6*sqrt(R^2 - 2*R*R0 + R0^2)*R0/(R^5 - 4*R^4*R0 + 6*R^3*R0^2 - 4*R^2*R0^3 + R*R0^4) + 8*sqrt(R^2 + 2*R*R0 + R0^2)/(R^4 + 4*R^3*R0 + 6*R^2*R0^2 + 4*R*R0^3 + R0^4) + 3*sqrt(R^2 + 2*R*R0 + R0^2)/(R^4 + 2*R^3*R0 - 2*R*R0^3 - R0^4) - 3*sqrt(R^2 - 2*R*R0 + R0^2)/(R^4 - 2*R^3*R0 + 2*R*R0^3 - R0^4) - 8*sqrt(R^2 - 2*R*R0 + R0^2)/(R^4 - 4*R^3*R0 + 6*R^2*R0^2 - 4*R*R0^3 + R0^4))*R^2

sage: JR(R0,R)=integral(ERR(R0,R,theta)*2*pi*R*sin(theta)*R,theta,0,pi)
sage: plot(JR(R0,1),R0,1,10)
Launched png viewer for Graphics object consisting of 1 graphics primitive
sage: plot(JR(R0,1),R0,2,10)
Launched png viewer for Graphics object consisting of 1 graphics primitive

